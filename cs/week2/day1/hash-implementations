class MyHashSet {
public:
    /** Initialize your data structure here. */
    MyHashSet(): hashSet(1000001, 0) {}
    
    void add(int key) {
        if(hashSet[key] != 1){
            hashSet[key] = 1;
        }
    }
    
    void remove(int key) {
        if(hashSet[key] == 1){
            hashSet[key] = 0;
        }
    }
    
    /** Returns true if this set contains the specified element */
    bool contains(int key) {
        if(hashSet[key] == 1){
            return 1;
        }
        return 0;
    }
private:
    vector<int>hashSet;
};

==================================================================

class MyHashMap {
public:
    /** Initialize your data structure here. */
    MyHashMap():hashMap(1000001,-1) {
        
    }
    
    /** value will always be non-negative. */
    void put(int key, int value) {
        hashMap[key] = value;
    }
    
    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */
    int get(int key) {
        if(hashMap[key] == -1){
            return -1;
        }
        else{
            return hashMap[key];
        }
    }
    
    /** Removes the mapping of the specified value key if this map contains a mapping for the key */
    void remove(int key) {
        hashMap[key] = -1;
    }
private:
    vector <int> hashMap;
};